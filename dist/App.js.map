{"version":3,"file":"App.js","sourceRoot":"","sources":["../src/App.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\nimport * as express from 'express';\nimport * as logger from 'morgan';\nimport * as bodyParser from 'body-parser';\nimport * as shell from 'shelljs';\nimport * as _ from 'lodash';\n\nclass App {\n    public express: express.Application;\n\n    private remitly_root: string = \"~/remitly-vagrant/html\";\n    private cli_root: string = path.join(__dirname, '..', 'src', 'cli');\n    private git_user: string = 'tallen94';\n    private git_remitly: string = 'Remitly';\n\n    private git_url: string = 'git@github.com::user/CXCoreService.git'\n\n    private apps: any = {\n        'cx': {\n            root: 'CXCoreService',\n            vagrant: ''\n        },\n        'plat': {\n            root: 'platform',\n            vagrant: '/api'\n        },\n        'db': {\n            root: 'vagrant-dev',\n            vagrant: '/devdb'\n        },\n        'port': {\n            root: 'portal',\n            vagrant: ''\n        },\n        'jcom': {\n            root: 'JavaCommon',\n            vagrant: ''\n\n        },\n        'fund': {\n            root: 'FundingService',\n            vagrant: ''\n        }\n    };\n\n    constructor() {\n        this.express = express();\n        this.middleware();\n        this.routes();\n    }\n\n    private middleware(): void {\n        this.express.use(logger('dev'));\n        this.express.use(bodyParser.json());\n        this.express.use(bodyParser.urlencoded({ extended: false }));\n    }\n\n    private routes(): void {\n        let router = express.Router();\n\n        router.get('/', (req, res, next) => {\n            res.json({\n                message: 'Rcli Api'\n            });\n        });\n\n        router.get('/gen_apps_file', (req, res) => {\n            let string = this.genAppsDict();\n            this.echoStringToFile('REMITLY_ROOT=' + this.remitly_root, path.join(this.cli_root, 'apps'), true);\n            this.echoStringToFile(string, path.join(this.cli_root, 'apps'), false);\n\n            res.json({ message: 'init apps' });\n        });\n\n        router.get('/init', (req, res) => {\n            this.linkCliFolder();\n            this.echoStringToFile(\"source ~/.rcli/commands\", '~/.bash_profile', false);\n            res.json({ message: 'added lines to .bash_profile' });\n        });\n\n        router.get('/clean', (req, res) => {\n            this.clean();\n            res.json({ message: 'cleaned' })\n        });\n\n        this.express.use('/', router);\n    }\n\n    private genAppsDict(): string {\n        let string = 'declare -A apps\\n' +\n            \"apps=(\";\n\n        _.each(this.apps, (app, key) => {\n            string += '[\"' + key + '\"]=\"' + app.root + app.vagrant + '\"\\n'\n        });\n\n        string += \")\";\n\n        return string;\n    }\n\n    private linkCliFolder() {\n        shell.exec('ln -s ' + this.cli_root + ' ~/.rcli');\n    }\n\n    private clean() {\n        shell.rm('-r', '~/.rcli');\n        shell.exec(\"sed -i '' 's/source ~\\\\/\\\\.rcli\\\\/commands//g' ~/.bash_profile\");\n    }\n\n    private echoStringToFile(s: string, file: string, overwrite: boolean): void {\n        let echo = overwrite ? 'echo \":string\" > :file' : 'echo \":string\" >> :file';\n        echo = echo.replace(':string', s)\n            .replace(':file', file);\n\n        shell.exec(echo);\n    }\n}\n\nexport default new App().express;"]}