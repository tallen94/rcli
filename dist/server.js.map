{"version":3,"file":"server.js","sourceRoot":"","sources":["../src/server.ts"],"names":[],"mappings":";;AAAA,2BAA6B;AAC7B,6BAA+B;AAE/B,6BAAwB;AAExB,KAAK,CAAC,mBAAmB,CAAC,CAAC;AAE3B,IAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AACrD,aAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAEtB,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,aAAG,CAAC,CAAC;AACtC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACpB,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC5B,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;AAEpC,uBAAuB,GAAkB;IACrC,IAAI,IAAI,GAAY,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;IACxE,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAAC,MAAM,CAAC,GAAG,CAAC;IAC5B,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;QAAC,MAAM,CAAC,IAAI,CAAC;IAChC,IAAI;QAAC,MAAM,CAAC,KAAK,CAAC;AACtB,CAAC;AAED,iBAAiB,KAA4B;IACzC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,QAAQ,CAAC;QAAC,MAAM,KAAK,CAAC;IAC5C,IAAI,IAAI,GAAG,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,GAAG,OAAO,GAAG,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC;IACxE,MAAM,CAAA,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAChB,KAAK,QAAQ;YACT,OAAO,CAAC,KAAK,CAAI,IAAI,kCAA+B,CAAC,CAAC;YACtD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,KAAK,CAAC;QACV,KAAK,YAAY;YACb,OAAO,CAAC,KAAK,CAAI,IAAI,uBAAoB,CAAC,CAAC;YAC3C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,KAAK,CAAC;QACV;YACI,MAAM,KAAK,CAAC;IACpB,CAAC;AACL,CAAC;AAED;IACI,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;IAC5B,IAAI,IAAI,GAAG,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,GAAG,UAAQ,IAAM,GAAG,UAAQ,IAAI,CAAC,IAAM,CAAC;IAC7E,KAAK,CAAC,kBAAgB,IAAM,CAAC,CAAC;AAClC,CAAC","sourcesContent":["import * as http from 'http';\nimport * as debug from 'debug';\n\nimport App from './App';\n\ndebug('ts-express:server');\n\nconst port = normalizePort(process.env.Port || 3000);\nApp.set('port', port);\n\nconst server = http.createServer(App);\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\nfunction normalizePort(val: number|string): number|string|boolean {\n    let port : number = (typeof val === 'string') ? parseInt(val, 10) : val;\n    if (isNaN(port)) return val;\n    else if (port >= 0) return port;\n    else return false;\n}\n\nfunction onError(error: NodeJS.ErrnoException) : void {\n    if (error.syscall !== 'listen') throw error;\n    let bind = (typeof port === 'string') ? 'Pipe ' + port : 'Port ' + port;\n    switch(error.code) {\n        case 'EACCES':\n            console.error(`${bind} requires elevated privileges`);\n            process.exit(1);\n            break;\n        case 'EADDRINUSE':\n            console.error(`${bind} is already in use`);\n            process.exit(1);\n            break;\n        default:\n            throw error;\n    }\n}\n\nfunction onListening(): void {\n    let addr = server.address();\n    let bind = (typeof addr === 'string') ? `pipe ${addr}` : `port ${addr.port}`;\n    debug(`Listening on ${bind}`);\n}"]}